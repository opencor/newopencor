language: cpp

sudo: required
dist: trusty

os:
  - linux
  - osx

env:
  - CONFIG=Release
  - CONFIG=Debug

branches:
  only:
    - master
    - /^\d+\.\d+(\.\d+)?$/
    - qtwebengine
    - travis-ci

install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
         sudo apt-get install python-software-properties
      && sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      && sudo apt-add-repository -y ppa:beineri/opt-qt562-trusty
      && sudo apt-get -qq update
      && sudo apt-get -qq install gcc-4.9 g++-4.9
      && sudo apt-get -qq install qt56location qt56multimedia qt56sensors qt56svg qt56tools qt56webchannel
      && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
      && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 50
      ;
    else
         brew update
      && brew install qt5
      && export OPENSSL_ROOT_DIR=/usr/local/opt/openssl
      && chmod -R 755 /usr/local/opt/qt5/*
      ;
    fi

script:
  # Note: on Linux, the linking of CellMLTextView_conversiontests and
  #       CellMLTextView_parsingtests results in an error regarding
  #       __cxa_throw_bad_array_new_length@Qt_5 not being defined in
  #       libQScintilla.so. Everything works fine locally and when deployed, so
  #       it is most likely related to the PPA version of Qt that we are using
  #       here (due to the way it must have been built). However, a simple
  #       workaround is toÂ build QScintilla, so this is what we are doing
  #       here...
  -    cd build
    && if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
         cmake -DCMAKE_BUILD_TYPE=$CONFIG -DENABLE_TRAVIS_CI=ON -DCMAKE_PREFIX_PATH=/opt/qt56/lib/cmake -DUSE_PREBUILT_QSCINTILLA_PLUGIN=OFF -DENABLE_TESTS=ON -DENABLE_SAMPLES=ON ..
         ;
       else
         cmake -DCMAKE_BUILD_TYPE=$CONFIG -DENABLE_TRAVIS_CI=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/qt5/lib/cmake -DENABLE_TESTS=ON -DENABLE_SAMPLES=ON ..
         ;
       fi
    && make -j 3
    && cd ..
    && if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
         build/bin/runtests
         ;
       else
         build/OpenCOR.app/Contents/MacOS/runtests
         ;
       fi

notifications:
  email: team@opencor.ws
