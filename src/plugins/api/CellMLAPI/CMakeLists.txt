PROJECT(CellMLAPIPlugin)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" ""
       RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/${REMOTE_EXTERNAL_BINARIES_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.dll 41e9a51988896a2864a804c1c6e1be5fa4b9f0a9)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.lib 043694c4d38b33c190658b5b8e4d5e62a35dbcc6)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.dll 6bf635c12b1f5b5e0e50c1de0ba25cde5e3517d4)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.lib b60064e2940337f7538570813395ba7279bbaed3)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.dll 7510236bff6927a6f28687e8acd9e36f122ed472)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.lib 589d02d5b859919238d65ea3c9785d38a51660a3)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.dll 311bea6418eb9d89a3ef318eaf90c3d68f350d42)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.lib ca9f94282064c9362f110a9aec39c478da2e0752)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.dll 30030e1116bfa793c240ca789cc1c64689d01ad0)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.lib d10df2477acd3a05726787ea5e722078b4f67c0a)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.dll 532f5f0187b9c8db3cb4fb84d33158da40aa85a7)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.lib bd70643084bbfcdeba9d317bbc5f14f7a5b137c8)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.dll 14162fc9539f002b5d636555d1c1d3e4883997bf)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.lib 02c597784a0c236a4a0086f3a006abf7541ba783)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.dll 44f5cc1c0003b8f1da5825fb3c05b7669addc94a)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.lib e580c5c773f8544b45516aee0a6b3cf4b6dc7729)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.dll 9f815211cda8d7ea5cb68110cfd230ce5ea6dac7)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.lib 8b3eeb975fcc12e1f05c8674a536d0c8cbbea014)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.dll d6171015a26ca83d1ea24c72081f574a505f7bfc)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.lib ee0dd2ceb50d809b8de40bbc58081e5edaa0aad1)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.dll 91f08de8db147b565caec726cb3bba30112be03e)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.lib 503a827c11b712f9ba2f79f45cd946aa11d5a7be)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.dll 97c7ac604b93fdbf86f710ad7acbf7d1f583f465)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.lib 1e4d1b12321bc522646c9459b625e0c23d56338a)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.dll 90be20bf9539c7147570e6fd16d996477a32948d)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.lib b4714a75de9c1442b2b22e7c893a3c259bd8e879)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.dll 3f193e5c6984bde666e8e90afbb371f6bb607f1d)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.lib 4cbca6f20d5a003bb3a0d1ea9aa9fe2639365f47)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.dll be484c02ff878a07e06c2bb2a916fa49fe2c84fd)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.lib e0fcbdab6d07d13973767014fc2ca311758c1a00)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.dll 998cbe8fdffa5efba0d515acb93fb034bd7b9ac2)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.lib 48244479117544a9b221f1ee1a3ddfab98f54a36)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.dll 0b1e723a3f1e917f1dbc29d958666caa0f84b07d)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.lib 5bd8d581918feda8a952de5c165261e9e9912e82)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.dll 8482ce5d05515a8e96a87502382667552f501106)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.lib 52911a376219de5c4025d7203abee8a7b3c520a7)
    ENDIF()
ELSEIF(APPLE)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libannotools.2.dylib ea9b9110dc2271704c305a441b0552d85b6a6fee)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libccgs.3.dylib 75275e24b129d0ca7e1791e668a6cd17e55c5aab)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceleds.1.dylib d87c2eb09fde24b36d61d782f65ffdafd8c3e95e)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceledsexporter.1.dylib 25ebaae7a401de4e6c1c4fa3a10ed0a690a79a3a)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcellml.2.dylib 879bc82b0038e58a088ae627a1a5978dff981727)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcevas.1.dylib 465dcf91aa61662dce654e8c6d7aaa42ea7a2fcb)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcuses.1.dylib 99588678c8676f012fcbeed37ed1e49a75a9f6e2)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libmalaes.1.dylib c83665e2ef6db7b5a3d80ad6a665468fa7cbbd4f)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libvacss.1.dylib a2b61f1416db387977bcaaf74b9fb4bc5b346792)
ELSE()
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libannotools.so.2 1e043e82ff1180254a9501c8dc4b6091064f5d6e)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libccgs.so.3 047f491833f42490186a5a0e30cbf9f85e958b38)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceleds.so.1 e04f4f6f32de1914de97f7a0bd8b79ff893faf5e)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceledsexporter.so.1 19003a980ea24cb3521964e414b1703c7f91643f)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcellml.so.2 e8b03752b9a98a3e1bc277eb7db765f3b3770e69)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcevas.so.1 ad0bed97a0073826b64daa49dd8186ca9bd8b0b2)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcuses.so.1 ba912d7fe0c0586110aa458a38a1ec28714fc6b4)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libmalaes.so.1 9a2c734b3aee9a5de7bdd88c890fdbf1ea103e82)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libvacss.so.1 d2475ec8963777ab8f9d6d07a1ac026b525c0223)
ENDIF()

# Retrieve the CellML API external binaries

SET(EXTERNAL_BINARIES_DIR ${PROJECT_SOURCE_DIR}/${LOCAL_EXTERNAL_BINARIES_DIR})

IF(WIN32)
    SET(EXTERNAL_BINARIES
        annotools${CMAKE_SHARED_LIBRARY_SUFFIX}
        ccgs${CMAKE_SHARED_LIBRARY_SUFFIX}
        celeds${CMAKE_SHARED_LIBRARY_SUFFIX}
        celedsexporter${CMAKE_SHARED_LIBRARY_SUFFIX}
        cellml${CMAKE_SHARED_LIBRARY_SUFFIX}
        cevas${CMAKE_SHARED_LIBRARY_SUFFIX}
        cuses${CMAKE_SHARED_LIBRARY_SUFFIX}
        malaes${CMAKE_SHARED_LIBRARY_SUFFIX}
        vacss${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
ELSEIF(APPLE)
    SET(EXTERNAL_BINARIES
        libannotools.2${CMAKE_SHARED_LIBRARY_SUFFIX}
        libccgs.3${CMAKE_SHARED_LIBRARY_SUFFIX}
        libceleds.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libceledsexporter.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcellml.2${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcevas.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcuses.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libmalaes.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libvacss.1${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
ELSE()
    SET(EXTERNAL_BINARIES
        libannotools${CMAKE_SHARED_LIBRARY_SUFFIX}.2
        libccgs${CMAKE_SHARED_LIBRARY_SUFFIX}.3
        libceleds${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libceledsexporter${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libcellml${CMAKE_SHARED_LIBRARY_SUFFIX}.2
        libcevas${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libcuses${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libmalaes${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libvacss${CMAKE_SHARED_LIBRARY_SUFFIX}.1
    )
ENDIF()

# Ignore some warnings on Windows

IF(WIN32)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4091 /wd4290")
    # Note: on Windows, some warnings get generated, but we have nothing to do
    #       with them...
ENDIF()

# Add the plugin

ADD_PLUGIN(CellMLAPI
    SOURCES
        ../../plugininfo.cpp

        src/cellmlapiplugin.cpp
    HEADERS_MOC
        src/cellmlapiplugin.h
    INCLUDE_DIRS
        include
        src
    QT_MODULES
        Core
    EXTERNAL_BINARIES_DIR
        ${EXTERNAL_BINARIES_DIR}
    EXTERNAL_BINARIES
        ${EXTERNAL_BINARIES}
    TESTS
        tests
)
