//==============================================================================
// CellML API plugin
//==============================================================================

#include "cellmlapiplugin.h"
#include <QLibrary>
#include <QApplication>
#include <QDir>

//==============================================================================

namespace OpenCOR {
namespace CellMLAPI {

//==============================================================================

PLUGININFO_FUNC CellMLAPIPluginInfo()
{
    Descriptions descriptions;

    descriptions.insert("en", QString::fromUtf8("A plugin to access the <a href=\"http://cellml-api.sourceforge.net/\">CellML API</a>"));
    descriptions.insert("fr", QString::fromUtf8("Une extension pour accéder à l'<a href=\"http://cellml-api.sourceforge.net/\">API CellML</a>"));

    // This code is necessary to ensure that symbols in libCIS are available
    // to code generated by LLVM, by ensuring that CIS symbols are globally
    // available on platforms where that wouldn't otherwise be the case.
#if defined(Q_OS_LINUX) || defined(Q_OS_MAC)
    QString cisName = 
      QDir(qApp->applicationDirPath()).canonicalPath()
#if defined(Q_OS_LINUX)
      + QString("/../libcis.so.2");
#else
      + QString("/../libcis.2.dylib");
#endif

    QLibrary libcis(cisName);
    libcis.setLoadHints(QLibrary::ResolveAllSymbolsHint | QLibrary::ExportExternalSymbolsHint);
    libcis.load();
#endif

    return new PluginInfo(PluginInfo::InterfaceVersion001,
                          PluginInfo::General,
                          PluginInfo::Api,
                          false,
                          QStringList(),
                          descriptions);
}

//==============================================================================

}   // namespace CellMLAPI
}   // namespace OpenCOR

//==============================================================================
// End of file
//==============================================================================
